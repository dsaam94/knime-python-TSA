from .parent import _PredictorParams
import knime.extension as knext
from util import utils as kutil


@knext.parameter_group(label="Sarimax Predictor Parameters")
class SXPredictorApplyParams(_PredictorParams):

    """

    SARIMAX Predictor Parameter class inheriting the private class _PredictorParams above.

    The predictor attributes are put together in the parameter group called "Sarimax Predictor Parameters".

    An additional column parameter is initialized in this child class by the name, "exog_column_forecasts".

    This attribute is the column selection of the exogenous variable for the forecasts. Note that number of forecasts should be equal
    to the number of rows in this new exogenous column.

    """

    exog_column_forecasts = knext.ColumnParameter(
        label="Exogenous Column for Forecasting",
        description="Table containing exogenous column for making forecasts on the SARIMAX model, must contain a numeric column with no missing values and of length equal to the number of forecasts to be made.",
        port_index=1,
        column_filter=kutil.is_numeric,
    )

    natural_log = knext.BoolParameter(
        label="Reverse Log",
        description="Check this box if you applied the log transform inside the SARIMAX Forecaster node while training your model. It will reverse the transform before generating forecasts",
        default_value=False,
    )


@knext.parameter_group(label="Sarimax Forecaster Parameters")
class SarimaxForecasterParms:

    """

    SARIMAX Predictor settings to configure the forecasts generated by the input model.

    """

    predictor_params = SXPredictorApplyParams()
